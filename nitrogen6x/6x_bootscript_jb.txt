setenv bootargs enable_wait_mode=off
setenv nextcon 0;
setenv bootargs $bootargs console=ttymxc1,115200 vmalloc=400M consoleblank=0 ;

if test -n "$tempfuse" ; then
	setenv bootargs $bootargs thermal.fusedata=$tempfuse
fi

i2c dev 2
if i2c probe 0x04 ; then
	setenv bootargs $bootargs video=mxcfb${nextcon}:dev=ldb,bpp=32,LDB-XGA,if=RGB666
	if test "0" -eq $nextcon; then
		setenv fbmem "fbmem=20M";
	else
		setenv fbmem ${fbmem},20M
	fi
	setexpr nextcon $nextcon + 1
else
	echo "------ no Freescale display";
fi

if i2c probe 0x38 ; then
	setenv bootargs $bootargs video=mxcfb${nextcon}:dev=ldb,bpp=32,1024x600M@60,if=RGB666
	if test "0" -eq $nextcon; then
		setenv fbmem "fbmem=20M";
	else
		setenv fbmem ${fbmem},20M
	fi
	setexpr nextcon $nextcon + 1
else
	echo "------ no 1024x600 display";
fi

if i2c probe 0x48 ; then
	setenv bootargs $bootargs video=mxcfb${nextcon}:dev=lcd,bpp=32,CLAA-WVGA,if=RGB666
	if itest.s "x" -eq "x$calibration" ; then
		setenv bootargs $bootargs tsc2004.calibration=-67247,-764,272499173,324,69283,-8653010,65536
	else
		setenv bootargs $bootargs tsc2004.calibration=$calibration
	fi
	if test "0" -eq $nextcon; then
		setenv fbmem "fbmem=20M";
	else
		setenv fbmem ${fbmem},20M
	fi
	setexpr nextcon $nextcon + 1
else
	echo "------ no 800x480 display";
fi

if hdmidet ; then
	setenv bootargs $bootargs video=mxcfb${nextcon}:dev=hdmi,bpp=32,1280x720M@60,if=RGB24
	if test "0" -eq $nextcon; then
		setenv fbmem "fbmem=48M";
	else
		setenv fbmem ${fbmem},48M
	fi
	setexpr nextcon $nextcon + 1
else
	echo "------ no HDMI monitor";
fi

while test "4" -ne $nextcon ; do
	setenv bootargs $bootargs video=mxcfb${nextcon}:off ;
	setexpr nextcon $nextcon + 1 ;
done

bootdev=sdhci-esdhc-imx.2
setenv bootargs $bootargs $fbmem androidboot.hardware=freescale
if itest.s "xsata" == "x$dtype" ; then
    bootdev=ahci.0
elif itest.s "xmmc" == "x$dtype" ; then
    if itest 1 == ${disk}; then
	bootdev=sdhci-esdhc-imx.3
    fi
fi

setenv bootargs $bootargs androidboot.bootdev=$bootdev

${fs}load ${dtype} ${disk}:1 10800000 uImage && ${fs}load ${dtype} ${disk}:1 12800000 uramdisk.img && bootm 10800000 12800000
echo "Error loading kernel image"
